generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String   @db.MediumText
  username  String   @db.MediumText
  password  String   @db.MediumText
  image     String?  @db.LongText
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt() @map("updated_at")
}

model Book {
  id        Int       @id @default(autoincrement())
  name      String    @db.MediumText
  slug      String    @unique
  chapters  Chapter[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @updatedAt() @map("updated_at")

  @@map("books")
}

model Chapter {
  id           Int      @id @default(autoincrement())
  name         String   @db.MediumText
  slug         String   @unique
  abbreviation String
  bookId       Int      @map("book_id")
  book         Book     @relation(fields: [bookId], references: [id])
  verses       Verse[]
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @updatedAt() @map("updated_at")

  @@map("chapters")
}

model Verse {
  id        Int      @id @default(autoincrement())
  slug      String   @unique
  name      String   @db.MediumText
  number    Int
  text      String
  audio     String?
  chapterId Int      @map("chapter_id")
  chapter   Chapter  @relation(fields: [chapterId], references: [id])
  notes     Note[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt() @map("updated_at")

  @@map("verses")
}

model Note {
  id        Int      @id @default(autoincrement())
  text      String
  verseId   Int      @map("verse_id")
  verse     Verse    @relation(fields: [verseId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt() @map("updated_at")

  @@map("notes")
}

model Author {
  id        String   @id @default(uuid())
  name      String
  image     String   @db.LongText
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt() @map("updated_at")
}
